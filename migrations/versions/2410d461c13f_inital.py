"""inital

Revision ID: 2410d461c13f
Revises: 
Create Date: 2024-12-02 01:23:55.311988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2410d461c13f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patients')
    op.drop_index('ix_memories_memory_id', table_name='memories')
    op.drop_table('memories')
    op.drop_index('ix_family_environment_members_family_environment_member_id', table_name='family_environment_members')
    op.drop_table('family_environment_members')
    op.drop_index('ix_family_environments_family_environment_id', table_name='family_environments')
    op.drop_table('family_environments')
    op.drop_index('ix_individuals_individual_id', table_name='individuals')
    op.drop_table('individuals')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('individuals',
    sa.Column('individual_id', sa.INTEGER(), server_default=sa.text("nextval('individuals_individual_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('other_details', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('individual_id', name='individuals_pkey'),
    sa.UniqueConstraint('name', name='individuals_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_individuals_individual_id', 'individuals', ['individual_id'], unique=False)
    op.create_table('family_environments',
    sa.Column('family_environment_id', sa.INTEGER(), server_default=sa.text("nextval('family_environments_family_environment_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('family_environment_id', name='family_environments_pkey'),
    sa.UniqueConstraint('name', name='family_environments_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_family_environments_family_environment_id', 'family_environments', ['family_environment_id'], unique=False)
    op.create_table('family_environment_members',
    sa.Column('family_environment_member_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('family_environment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('individual_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['family_environment_id'], ['family_environments.family_environment_id'], name='family_environment_members_family_environment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.individual_id'], name='family_environment_members_individual_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('family_environment_member_id', name='family_environment_members_pkey')
    )
    op.create_index('ix_family_environment_members_family_environment_member_id', 'family_environment_members', ['family_environment_member_id'], unique=False)
    op.create_table('memories',
    sa.Column('memory_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('family_environment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('individual_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['family_environment_id'], ['family_environments.family_environment_id'], name='memories_family_environment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.individual_id'], name='memories_individual_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('memory_id', name='memories_pkey')
    )
    op.create_index('ix_memories_memory_id', 'memories', ['memory_id'], unique=False)
    op.create_table('patients',
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('family_environment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['family_environment_id'], ['family_environments.family_environment_id'], name='patients_family_environment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['individuals.individual_id'], name='patients_patient_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('patient_id', name='patients_pkey')
    )
    # ### end Alembic commands ###
